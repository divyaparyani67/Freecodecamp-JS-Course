Q.Golf Code
In the game of Golf, each hole has a par, meaning, the average number of strokes a golfer is expected to make in order to sink the ball in the hole to complete the play. Depending on how far above or below par your strokes are, there is a different nickname.

Your function will be passed par and strokes arguments. Return the correct string according to this table which lists the strokes in order of priority; top (highest) to bottom (lowest):
const names = ["Hole-in-one!", "Eagle", "Birdie", "Par", "Bogey", "Double Bogey", "Go Home!"];

ANS. function golfScore(par, strokes) {
  // Only change code below this line
if (strokes == 1) {
return names[0]
}
else if (strokes <= par - 2) {
  return  names[1]
}
else if (strokes == par - 1 ){
return names[2]
}
else if (strokes == par) {
  return names[3]
}
else if (strokes == par + 1){
  return names[4]
}
else if (strokes == par + 2){
  return names[5]
}
else if (strokes >= par + 3){
  return names[6]
}
  return "Change Me";
  // Only change code above this line
}

golfScore(5, 4);

 *********

Q.In a switch statement you may not be able to specify all possible values as case statements. Instead, you can add the default statement which will be executed if no matching case statements are found. Think of it like the final else statement in an if/else chain.

A default statement should be the last case.

ANS. function switchOfStuff(val) {
  let answer = "";
  // Only change code below this line
switch (val) {
  case "a":
  answer = "apple";
  break;
     
     case "b":
     answer = "bird";
     break;
         
         case "c":
         answer = "cat";
         break;
              default:
                 answer = "stuff";
                 break;


}


  // Only change code above this line
  return answer;
}

switchOfStuff(1);

 ************

Q. If you have many options to choose from, use a switch statement. A switch statement tests a value and can have many case statements which define various possible values. Statements are executed from the first matched case value until a break is encountered.


ANS. function caseInSwitch(val) {
  let answer = "";
  // Only change code below this line
 switch(val) {
   witch(val) {
   case 1:
   answer = "alpha";
   break;
   case 2:
   answer = "beta";
   break;
   case 3:
   answer = "gamma";
   break;
   case 4:
   answer = "delta";
   break;

 }


  // Only change code above this line
  return answer;
}

caseInSwitch(1);


************



Q. Write a switch statement to set answer for the following ranges:
1-3 - Low
4-6 - Mid
7-9 - High

Ans. function sequentialSizes(val) {
  let answer = "";
  // Only change code below this line
 switch(val) {

   case 1:
   case 2:
   case 3:
       answer = "Low";
       break;
    case 4:
    case 5:
    case 6:
       answer = "Mid";
       break;
   case 7:
   case 8:
   case 9:
      answer = "High";
      break;   
 }
 
 
  // Only change code above this line
  return answer;
}

sequentialSizes(1);


********
Q. If you have many options to choose from, a switch statement can be easier to write than many chained if/else if statements. The following:

ANS. function chainToSwitch(val) {
  let answer = "";
  // Only change code below this line

  switch (val) {
    case  "bob": 
    answer = "Marley";
    break;
     case  42:
    answer = "The Answer";
    break;
   case 1: 
    answer = "There is no #1";
    break;
  case 99: 
    answer = "Missed me by this much!";
    break;
   case 7: 
    answer = "Ate Nine";
    break;
  }
  // Only change code above this line
  return answer;

  }
chainToSwitch(7);
